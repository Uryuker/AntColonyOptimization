/**
 * 
 */
package fr.utbm.ia54.antcolony.gui

import fr.utbm.ia54.antcolony.message.AntNumberChange
import fr.utbm.ia54.antcolony.message.GraphChange
import fr.utbm.ia54.antcolony.message.NewGraph
import fr.utbm.ia54.antcolony.message.Pause
import fr.utbm.ia54.antcolony.message.PheromoneRateChange
import fr.utbm.ia54.antcolony.message.Play
import fr.utbm.ia54.antcolony.message.Stop
import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.util.OpenEventSpace
import io.sarl.util.OpenEventSpaceSpecification
import java.awt.^event.ActionListener
import java.util.UUID
import javax.swing.JButton
import javax.swing.JPanel
import javax.swing.JSlider
import javax.swing.JSplitPane
import org.graphstream.graph.Graph

/**
 * @author quentin barthelemy
 *
 */
agent GraphAgent {
	uses DefaultContextInteractions, Behaviors, Logging
	var pheromoneRate : int
	var splitPane : JSplitPane
	var settingsPanel : JPanel
	var graphPanel : JPanel
	var antSlider : JSlider
	var antNumber : int
	var pheromoneSlider : JSlider
	var playPanel : JPanel
	var generateButton : JButton
	var temp : int
	var space : OpenEventSpace
	var mf : MainFrame
	var play : JButton
	var pause : JButton
	var stop : JButton
	var tempPlay : boolean
	var tempPause : boolean
	var tempStop : boolean
	var newGraph : boolean
	var al : ActionListener []

	on Initialize {
	//Get the space to send infos
		space = defaultContext.getOrCreateSpaceWithSpec(typeof(OpenEventSpaceSpecification),
		occurrence.parameters.get(0) as UUID)
		space.register(asEventListener())
		//Create the main frame
		mf = new MainFrame()
		splitPane = mf.createMainFrame()
		//Get the settings panel
		graphPanel = splitPane.getRightComponent as JPanel
		settingsPanel = splitPane.getLeftComponent as JPanel
		playPanel = settingsPanel.getComponent(0) as JPanel
		play = playPanel.getComponent(0) as JButton
		generateButton = settingsPanel.getComponent(15) as JButton
		pause = playPanel.getComponent(1) as JButton
		stop = playPanel.getComponent(2) as JButton
		//Get the number of ant
		antSlider = settingsPanel.getComponent(4) as JSlider
		antNumber = antSlider.value
		println(antNumber)

		//Get the pheromone rate
		pheromoneSlider = settingsPanel.getComponent(8) as JSlider
		pheromoneRate = pheromoneSlider.value
		println(pheromoneRate)

		tempPlay = false
		tempPause = false
		tempStop = false
		newGraph = false
		

		while(true)
			{
			//Detect pressure on Button
			//send the event only at the end of the click
				if(generateButton.getModel.isPressed != newGraph) {
					newGraph = !newGraph
					if(!generateButton.getModel.isPressed) {
						//Send event new gaph to say to the environnement that the graph has changed
						var gr : Graph
						gr=new XMLToGraph().getGraph();
						space.emit(new NewGraph(gr))
					}
						
				
				}
				if(play.getModel.isPressed != tempPlay) {
					tempPlay = !tempPlay
					if(!play.getModel.isPressed) {
						//send play to the environnement
						space.emit(new Play(true))
					}
				}
				//send the event only at the end of the click
				if(pause.getModel.isPressed != tempPause) {
					tempPause = !tempPause
					if(!pause.getModel.isPressed) {
						//send pause at the environnement
						space.emit(new Pause(true))
					}
				}
				//send the event only at the end of the click
				if(stop.getModel.isPressed != tempStop) {
					tempStop = !tempStop
					if(!stop.getModel.isPressed) {
						//Send stop to the environnement
						space.emit(new Stop(true))
					}
				}
				//Detection of changes on the ant number or the pheromone rate
				antSlider.revalidate
				temp = antSlider.value
				if(temp != antNumber) {
					antNumber = temp
					space.emit(new AntNumberChange(antNumber))

				}
				pheromoneSlider.revalidate
				temp = pheromoneSlider.value
				if(temp != pheromoneRate) {
					pheromoneRate = temp
					space.emit(new PheromoneRateChange(pheromoneRate))

				}

			}

		}

		on GraphChange {
		//If we receive Graph Change, the edges color has been updated so we need to repaint the graph
			graphPanel.repaint();
			graphPanel.revalidate();
		}
	}
	
	